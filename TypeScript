Main Functionality of trypeScript is Static checking
Static Checking means analyzing your code and checking you might be running into potential error without running the code and getting errors at runtime.

---in terminal---
Global install npm install -g typescript
tsc intro.js

Types available in typescript
--------------------------------
let variableName:type=value

NOTE: there is no int or float in js
let userID:number=33.4
or
let userId:number=33

/any refers to any datatype.It does not allow type checked
NoImplicitAny -is writtern in ts.config file that does not allow us to perform 'any'

function addtwo(num:number){
    //return num+2;
    return "hitest"
}
let ans=addtwo(4);

BOTH ARE ELIGIBLE as we have not defined the return type of the function

const =(num:number):number=>{
    return num+2;
}

const error=(error:string):void{ //function return nothing so void
    console.log(error)
}

Type alias

type User={
    name:string,
    active:boolean
}

function createUser(user:User):User{
    return {name:"",active:true};
}

createUser({name:"hitesh","active":false})

//Array
const superheroes:string[]=[];
superheroes.push("Spider");

const arr:Array<Number>=[];

type User={
    name:string,
    isactive:boolean
}
const ar:User[]=[]

Union
------
combination of two or more types 
let score :number|boolean|string=33


//readonly
type User={
    readonly _id:string
    name:string,
    active:boolean.
    creditdetails?:string  //? indicates optional 
}
let myuser:User={
    _id:"12345",
    name:"ritu",
    active:true
}
myuser._id="34567" //error
